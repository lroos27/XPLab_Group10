knitr::opts_chunk$set(echo = TRUE, error = F, message = F, warning = F)
data <- read_csv('participants_pilot.csv')
# package for convenience functions (e.g. ggplot2, dplyr, etc.)
library(tidyverse)
# package for this course
library(aida)
# package for Bayesian regression
library(brms)                                         # Install readr package
library(dplyr)                                                  # Load dplyr package
library(plyr)                                                   # Load plyr package
library(readr)
# parallel execution of Stan code
options(mc.cores = parallel::detectCores())
# use the aida-theme for plotting
theme_set(theme_aida())
# global color scheme / non-optimized
project_colors = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
# setting theme colors globally
scale_colour_discrete <- function(...) {
scale_colour_manual(..., values = project_colors)
}
scale_fill_discrete <- function(...) {
scale_fill_manual(..., values = project_colors)
}
# nicer global knitr options
knitr::opts_chunk$set(warning = FALSE, message = FALSE,
cache = TRUE, fig.align = 'center')
# package for convenience functions (e.g. ggplot2, dplyr, etc.)
library(tidyverse)
# package for this course
library(aida)
# package for Bayesian regression
library(brms)                                         # Install readr package
library(dplyr)                                                  # Load dplyr package
library(plyr)                                                   # Load plyr package
library(readr)
# parallel execution of Stan code
options(mc.cores = parallel::detectCores())
# use the aida-theme for plotting
theme_set(theme_aida())
# global color scheme / non-optimized
project_colors = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#000000")
# setting theme colors globally
scale_colour_discrete <- function(...) {
scale_colour_manual(..., values = project_colors)
}
scale_fill_discrete <- function(...) {
scale_fill_manual(..., values = project_colors)
}
# nicer global knitr options
knitr::opts_chunk$set(warning = FALSE, message = FALSE,
cache = TRUE, fig.align = 'center')
data <- read_csv('participants_pilot.csv')
data
# filter out the practice trials
# select only the relevant columns
tidy_data <- data %>%
group_by(condition) %>%
filter(trial_name != 'teammate_block_practice' & trial_name != 'opponent_block_practice') %>%
select(subject_ID,response, condition, option1, picture1, option2, picture2, option3, picture3, option4, picture4, evidencepic)
tidy_data
# create a new column to store the current evidence in
# change the values of the pictures to make them more understandable
tidy_data <- tidy_data %>%
mutate(
evidence = case_when(
evidencepic %in% str_c("study_images/Helpful", 1:6, ".png") ~ "Helpful",
evidencepic %in% str_c("study_images/Uninformative", 1:6, ".png") ~ "Uninformative",
evidencepic %in% str_c("study_images/Misleading", 1:6, "_0.png") ~ "Misleading 0%",
evidencepic %in% str_c("study_images/Misleading", 1:6, "_50.png") ~ "Misleading 50%",
evidencepic %in% str_c("study_images/Misleading", 1:6, "_25.png") ~ "Misleading 25%"
),
picture1 = case_when(
picture1 %in% str_c("study_images/Truth", 1:6, ".png") ~ "Truth",
picture1 %in% str_c("study_images/Decoy", 1:6, "1.png") ~ "Decoy1",
picture1 %in% str_c("study_images/Decoy", 1:6, "2.png") ~ "Decoy2",
picture1 %in% str_c("study_images/Lure", 1:6, ".png") ~ "Lure"
),
picture2 = case_when(
picture2 %in% str_c("study_images/Truth", 1:6, ".png") ~ "Truth",
picture2 %in% str_c("study_images/Decoy", 1:6, "1.png") ~ "Decoy1",
picture2 %in% str_c("study_images/Decoy", 1:6, "2.png") ~ "Decoy2",
picture2 %in% str_c("study_images/Lure", 1:6, ".png") ~ "Lure"
),
picture3 = case_when(
picture3 %in% str_c("study_images/Truth", 1:6, ".png") ~ "Truth",
picture3 %in% str_c("study_images/Decoy", 1:6, "1.png") ~ "Decoy1",
picture3 %in% str_c("study_images/Decoy", 1:6, "2.png") ~ "Decoy2",
picture3 %in% str_c("study_images/Lure", 1:6, ".png") ~ "Lure"
),
picture4 = case_when(
picture4 %in% str_c("study_images/Truth", 1:6, ".png") ~ "Truth",
picture4 %in% str_c("study_images/Decoy", 1:6, "1.png") ~ "Decoy1",
picture4 %in% str_c("study_images/Decoy", 1:6, "2.png") ~ "Decoy2",
picture4 %in% str_c("study_images/Lure", 1:6, ".png") ~ "Lure"
),
)
tidy_data
# decode the response and add the selected maps
# only show the relevant columns for the analysis
tidy_data <- tidy_data %>%
mutate(
response = case_when(
response %in% str_c("order_", 1:6, "[", 0, "]") ~ tidy_data$picture1,
response %in% str_c("order_", 1:6, "[", 1, "]") ~ tidy_data$picture2,
response %in% str_c("order_", 1:6, "[", 2, "]") ~ tidy_data$picture3,
response %in% str_c("order_", 1:6, "[", 3, "]") ~ tidy_data$picture4,
)
) %>%
select(subject_ID, response, condition, evidence)
tidy_data
